"use strict";var y=require("path"),s=require("electron"),b=require("original-fs");require("path");const{statSync:C}=require("fs"),u=require("os"),i=require("fs"),j=require("node-disk-info");u.platform();u.platform();const f=u.platform()==="linux";let v="\\",D="/",d;const{dialog:F}=require("electron");f?d=D:d=v;const k={}.npm_lifecycle_event==="app:dev";console.log("main.ts loaded");window.addEventListener("will-resize",e=>{e.preventDefault()});async function m(){const e=new s.BrowserWindow({width:800,height:600,webPreferences:{preload:y.join(__dirname,"../preload/preload.js"),nodeIntegration:!0,contextIsolation:!1}});e.resizable=!1,s.ipcMain.on("transfer",(r,o,t)=>{console.log(o,"<-- the file to be transferred",t," <-- the project/folder name"),e.webContents.send("ok",o,t),console.log(process.cwd())});let h=[];console.log(process.cwd()," <-- current directory");const w=r=>{if(i.existsSync("projectsFolder")||i.mkdirSync("projectsFolder"),i.existsSync("projectsFolder")){r&&!b.existsSync(`projectsFolder/${r}`)?i.mkdirSync(`projectsFolder/${r}`):e.webContents.send("duplicateWarning");let p=i.readdirSync("projectsFolder"),l=[];p.forEach((c,g)=>{console.log(c,g);let a={label:c,click(){console.log("hello from"+c+"project"),e.webContents.send("navigateToProject",c)}};console.log(a),l.push(a)}),h=l,e.webContents.send("allProjects",JSON.stringify(l))}let o=[{label:"View",submenu:[{role:"reload"},{role:"toggledevtools"},{type:"separator"},{role:"resetzoom"},{role:"zoomin"},{role:"zoomout"},{type:"separator"},{role:"togglefullscreen"}]}];const t=[{label:"File",submenu:[{label:"New Project",click(){console.log("hello from file menu"),e.webContents.send("createNewProject")}},{label:"Open",click(){console.log("open file manager"),e.webContents.send("fileManager")}},...h]},...o],n=s.Menu.buildFromTemplate(t);s.Menu.setApplicationMenu(n)};w(),s.ipcMain.on("openFileManager",()=>{console.log("mergerrrrrrr"),F.showOpenDialog({properties:["openFile"]}).then(r=>{var o;(o=r==null?void 0:r.filePaths[0])!=null&&o.length?(console.log(r.filePaths[0]),e.webContents.send("fileManagerOpen",r.filePaths[0])):console.log("no length, cancelled")})}),s.ipcMain.on("makeProject",(r,o)=>{w(o)}),s.ipcMain.on("getDrives",(r,o)=>{(async()=>{j.getDiskInfo().then(n=>{console.log("ASYNC results",n),console.log(typeof n);let p=Object.values(n),l=[];p.forEach(c=>{l.push((c==null?void 0:c._mounted)+d)}),console.log(l,"drives"),e.webContents.send("backEndMsg",l)}).catch(n=>{console.error(n)})})()}),s.ipcMain.on("setDirectory",(r,o)=>{var c;e.webContents.send("ok","setDirectory route success");const t=require("os").homedir();let n="",p=[],l;console.log("initialDirectory: ",o);try{o.length>0?l=i==null?void 0:i.readdirSync(o):(l=i.readdirSync("C:\\"),o="C:\\"),console.log(l,"contents")}catch{}f||(n=`${t}\\Desktop`,console.log("desktop directory: ",n));for(let g in l)try{let a,M;(c=C(o+d+l[g]))!=null&&c.isDirectory()?a=!0:a=!1,p.push({filename:l[g],isDirectory:a})}catch(a){console.log(a)}e.webContents.send("receiveDirectoryContents",{currentDirectory:o,currentDirectoryContents:p,desktop:n})}),s.ipcMain.on("upTheTree",(r,o)=>{const t=o.split(d);console.log(t.length,"directory string length");let n;if(console.log(t.length),!f&&t.length>=2&&(n=t.slice(0,t.length-1).join(d),console.log(n,"--new directory"),e.webContents.send("newDirectory",n)),f&&t.length>=3)n=t.slice(0,t.length-1).join(d),e.webContents.send("newDirectory",n);else return}),e==null||e.webContents.on("did-finish-load",()=>{e==null||e.webContents.send("main-process-message",new Date().toLocaleString())}),k?(e.loadURL("http://localhost:3000"),e.webContents.openDevTools()):e.loadFile(y.join(__dirname,"../../index.html"))}s.app.whenReady().then(()=>{m(),s.app.on("activate",function(){s.BrowserWindow.getAllWindows().length===0&&m()})});s.app.on("window-all-closed",()=>{process.platform!=="darwin"&&s.app.quit()});
