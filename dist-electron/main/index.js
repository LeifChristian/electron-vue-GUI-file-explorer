"use strict";var n=require("electron"),p=require("path"),v=require("fs"),b=require("drivelist"),I=require("os");function g(o){return o&&typeof o=="object"&&"default"in o?o:{default:o}}var w=g(v),L=g(b),h=g(I);p.join(__dirname,"..");p.join({}.DIST_ELECTRON,"../dist");n.app.isPackaged?{}.DIST:p.join({}.DIST_ELECTRON,"../public");const y=h.default.platform()==="darwin",D=h.default.platform()==="win32",a=h.default.platform()==="linux";let R="\\",x="/",r;a?r=x:r=R;console.log("Operating system is:",a?"Linux":y?"Mac":D?"Windows":"");process.platform==="win32"&&n.app.setAppUserModelId(n.app.getName());n.app.requestSingleInstanceLock()||(n.app.quit(),process.exit(0));let e=null;e==null||e.webContents.send("os",a?"linux":y?"mac":D?"windows":null);const E={}.VITE_DEV_SERVER_URL,_=p.join({}.DIST,"index.html");async function C(){e=new n.BrowserWindow({title:"Main window",icon:p.join({}.PUBLIC,"favicon.ico"),webPreferences:{nodeIntegration:!0,contextIsolation:!1}}),n.ipcMain.on("getDrives",(o,s)=>{console.log("message from frontend:",JSON.parse(s)),(async()=>{let l=[];const c=await L.default.list();try{console.log(c),c.forEach((t,u)=>{console.log(t.mountpoints[0],"b4"),typeof(t==null?void 0:t.mountpoints[0])!="undefined"&&l.push(t.mountpoints[0].path)}),console.log(l),e.webContents.send("backEndMsg",l)}catch(t){console.log(t)}})()}),n.ipcMain.on("setDirectory",(o,s)=>{var u,m;const i=require("os").homedir();let l,c=[],t;console.log("initialDirectory: ",s);try{s.length>0?t=(u=w.default)==null?void 0:u.readdirSync(s):(t=w.default.readdirSync("C:\\"),s="C:\\"),console.log(t,"contents")}catch{}a||(l=`${i}\\Desktop`,console.log("desktop directory: ",l));for(let f in t)try{let d,S;console.log(s+r+t[f],"concat check"),(m=w.default(s+r+t[f]))!=null&&m.isDirectory()?(console.log("its a directory"),d=!0):d=!1,c.push({filename:t[f],isDirectory:d})}catch(d){console.log(d)}e.webContents.send("receiveDirectoryContents",{currentDirectory:s,currentDirectoryContents:c,desktop:l})}),n.ipcMain.on("upTheTree",(o,s)=>{const i=s.split(r);console.log(i.length,"directory string length");let l;if(console.log(i.length),!a&&i.length>=2&&(l=i.slice(0,i.length-1).join(r),console.log(l,"--new directory"),e.webContents.send("newDirectory",l)),a&&i.length>=3)l=i.slice(0,i.length-1).join(r),e.webContents.send("newDirectory",l);else return}),{}.VITE_DEV_SERVER_URL?(e.loadURL(E),e.webContents.openDevTools()):e.loadFile(_),e.webContents.on("did-finish-load",()=>{e==null||e.webContents.send("main-process-message",new Date().toLocaleString())}),e.webContents.setWindowOpenHandler(({url:o})=>(o.startsWith("https:")&&n.shell.openExternal(o),{action:"deny"}))}n.app.whenReady().then(C);n.app.on("window-all-closed",()=>{e=null,process.platform!=="darwin"&&n.app.quit()});n.app.on("second-instance",()=>{e&&(e.isMinimized()&&e.restore(),e.focus())});n.app.on("activate",()=>{const o=n.BrowserWindow.getAllWindows();o.length?o[0].focus():C()});n.ipcMain.handle("open-win",(o,s)=>{const i=new n.BrowserWindow({webPreferences:{nodeIntegration:!0,contextIsolation:!1}});({}).VITE_DEV_SERVER_URL?i.loadURL(`${E}#${s}`):i.loadFile(_,{hash:s})});
